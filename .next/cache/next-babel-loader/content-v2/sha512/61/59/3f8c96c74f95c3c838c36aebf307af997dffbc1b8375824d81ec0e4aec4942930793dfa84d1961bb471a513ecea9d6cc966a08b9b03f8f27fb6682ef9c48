{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hengratanak/Desktop/nextjs-course-code/pages/events/[eventid].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { getEventById } from '../../dummy-data';\nimport { Fragment } from 'react';\nimport EventSummary from '../../components/event-detail/event-summary';\nimport EventLogistics from '../../components/event-detail/event-logistics';\nimport EventContent from '../../components/event-detail/event-content';\n\nvar EventID = function EventID() {\n  _s();\n\n  var router = useRouter();\n  var eventId = router.query.eventid;\n  var event = getEventById(eventId);\n\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No event found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventSummary, {\n      title: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      date: event.date,\n      address: event.location,\n      image: event.image,\n      imageAlt: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EventID, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = EventID;\nexport default EventID;\n\nvar _c;\n\n$RefreshReg$(_c, \"EventID\");","map":{"version":3,"sources":["/Users/hengratanak/Desktop/nextjs-course-code/pages/events/[eventid].js"],"names":["React","useRouter","getEventById","Fragment","EventSummary","EventLogistics","EventContent","EventID","router","eventId","query","eventid","event","title","date","location","image","description"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAClB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,MAAMQ,OAAO,GAAGD,MAAM,CAACE,KAAP,CAAaC,OAA7B;AACA,MAAMC,KAAK,GAAGV,YAAY,CAACO,OAAD,CAA1B;;AAEA,MAAG,CAACG,KAAJ,EAAU;AACN,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;;AAEH,sBACE,QAAC,QAAD;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,IAAI,EAAED,KAAK,CAACE,IAA5B;AAAkC,MAAA,OAAO,EAAEF,KAAK,CAACG,QAAjD;AAA2D,MAAA,KAAK,EAAEH,KAAK,CAACI,KAAxE;AAA+E,MAAA,QAAQ,EAAEJ,KAAK,CAACC;AAA/F;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI,QAAC,YAAD;AAAA,6BACI;AAAA,kBAAID,KAAK,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAlBD;;GAAMV,O;UACaN,S;;;KADbM,O;AAoBN,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport {useRouter} from 'next/router';\nimport { getEventById } from '../../dummy-data';\nimport { Fragment } from 'react';\nimport EventSummary from '../../components/event-detail/event-summary';\nimport EventLogistics from '../../components/event-detail/event-logistics';\nimport EventContent from '../../components/event-detail/event-content';\n\nconst EventID = () => {\n    const router = useRouter();\n    const eventId = router.query.eventid; \n    const event = getEventById(eventId);\n\n    if(!event){\n        return <p>No event found</p>\n    }\n\n  return (\n    <Fragment>\n        <EventSummary title={event.title}/>\n        <EventLogistics date={event.date} address={event.location} image={event.image} imageAlt={event.title}/>\n        <EventContent>\n            <p>{event.description}</p>\n        </EventContent>\n    </Fragment>\n  )\n}\n\nexport default EventID"]},"metadata":{},"sourceType":"module"}